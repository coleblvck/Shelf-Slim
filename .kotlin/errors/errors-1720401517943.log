kotlin version: 2.0.0
error message: org.jetbrains.kotlin.backend.common.BackendException: Backend Internal error: Exception during IR lowering
File being compiled: /home/blvck/.blvck/code/android/ShelfKotlin/app/src/main/java/com/coleblvck/shelfSlim/contentManagement/remixIcons/remixicon/design/Scissors-2-line.kt
The root cause java.lang.RuntimeException was thrown at: org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException(CodegenUtil.kt:253)
	at org.jetbrains.kotlin.backend.common.CodegenUtil.reportBackendException$default(CodegenUtil.kt:236)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:65)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:52)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invoke(performByIrFile.kt:38)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:29)
	at org.jetbrains.kotlin.backend.common.phaser.CompositePhase.invoke(PhaseBuilders.kt:16)
	at org.jetbrains.kotlin.backend.common.phaser.NamedCompilerPhase.phaseBody(CompilerPhase.kt:166)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.CompilerPhaseKt.invokeToplevel(CompilerPhase.kt:62)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.invokeCodegen(JvmIrCodegenFactory.kt:371)
	at org.jetbrains.kotlin.codegen.CodegenFactory.generateModule(CodegenFactory.kt:47)
	at org.jetbrains.kotlin.backend.jvm.JvmIrCodegenFactory.generateModuleInFrontendIRMode(JvmIrCodegenFactory.kt:433)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.generateCodeFromIr(jvmCompilerPipeline.kt:241)
	at org.jetbrains.kotlin.cli.jvm.compiler.pipeline.JvmCompilerPipelineKt.compileModulesUsingFrontendIrAndLightTree(jvmCompilerPipeline.kt:140)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:155)
	at org.jetbrains.kotlin.cli.jvm.K2JVMCompiler.doExecute(K2JVMCompiler.kt:50)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:104)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:48)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:453)
	at org.jetbrains.kotlin.incremental.IncrementalJvmCompilerRunner.runCompiler(IncrementalJvmCompilerRunner.kt:62)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.doCompile(IncrementalCompilerRunner.kt:506)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileImpl(IncrementalCompilerRunner.kt:423)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compileNonIncrementally(IncrementalCompilerRunner.kt:301)
	at org.jetbrains.kotlin.incremental.IncrementalCompilerRunner.compile(IncrementalCompilerRunner.kt:129)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.execIncrementalCompiler(CompileServiceImpl.kt:676)
	at org.jetbrains.kotlin.daemon.CompileServiceImplBase.access$execIncrementalCompiler(CompileServiceImpl.kt:92)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1661)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.base/java.lang.reflect.Method.invoke(Method.java:568)
	at java.rmi/sun.rmi.server.UnicastServerRef.dispatch(UnicastServerRef.java:360)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:200)
	at java.rmi/sun.rmi.transport.Transport$1.run(Transport.java:197)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:712)
	at java.rmi/sun.rmi.transport.Transport.serviceCall(Transport.java:196)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport.handleMessages(TCPTransport.java:587)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run0(TCPTransport.java:828)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.lambda$run$0(TCPTransport.java:705)
	at java.base/java.security.AccessController.doPrivileged(AccessController.java:399)
	at java.rmi/sun.rmi.transport.tcp.TCPTransport$ConnectionHandler.run(TCPTransport.java:704)
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
	at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN name:<get-Scissors-2-line> visibility:public modality:FINAL <> ($receiver:com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.DesignGroup) returnType:androidx.compose.ui.graphics.vector.ImageVector
  correspondingProperty: PROPERTY name:Scissors-2-line visibility:public modality:FINAL [val]
  $receiver: VALUE_PARAMETER name:<this> type:com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.DesignGroup
  BLOCK_BODY
    WHEN type=kotlin.Unit origin=IF
      BRANCH
        if: CALL 'public final fun not (): kotlin.Boolean [operator] declared in kotlin.Boolean' type=kotlin.Boolean origin=EXCLEQ
          $this: CALL 'public final fun EQEQ (arg0: kotlin.Any?, arg1: kotlin.Any?): kotlin.Boolean declared in kotlin.internal.ir' type=kotlin.Boolean origin=EXCLEQ
            arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:_scissors-2-line type:androidx.compose.ui.graphics.vector.ImageVector? visibility:private [static]' type=androidx.compose.ui.graphics.vector.ImageVector? origin=null
            arg1: CONST Null type=kotlin.Nothing? value=null
        then: BLOCK type=kotlin.Unit origin=null
          RETURN type=kotlin.Nothing from='public final fun <get-Scissors-2-line> (): androidx.compose.ui.graphics.vector.ImageVector declared in com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.design.Scissors_2_lineKt'
            CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=androidx.compose.ui.graphics.vector.ImageVector origin=EXCLEXCL
              <T0>: androidx.compose.ui.graphics.vector.ImageVector
              arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:_scissors-2-line type:androidx.compose.ui.graphics.vector.ImageVector? visibility:private [static]' type=androidx.compose.ui.graphics.vector.ImageVector? origin=null
    SET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:_scissors-2-line type:androidx.compose.ui.graphics.vector.ImageVector? visibility:private [static]' type=kotlin.Unit origin=null
      value: CALL 'public final fun build (): androidx.compose.ui.graphics.vector.ImageVector declared in androidx.compose.ui.graphics.vector.ImageVector.Builder' type=androidx.compose.ui.graphics.vector.ImageVector origin=null
        $this: CALL 'public final fun apply <T> (block: @[ExtensionFunctionType] kotlin.Function1<T of kotlin.StandardKt.apply, kotlin.Unit>): T of kotlin.StandardKt.apply [inline] declared in kotlin.StandardKt' type=androidx.compose.ui.graphics.vector.ImageVector.Builder origin=null
          <T>: androidx.compose.ui.graphics.vector.ImageVector.Builder
          $receiver: CONSTRUCTOR_CALL 'public constructor <init> (name: kotlin.String?, defaultWidth: androidx.compose.ui.unit.Dp, defaultHeight: androidx.compose.ui.unit.Dp, viewportWidth: kotlin.Float, viewportHeight: kotlin.Float, tintColor: androidx.compose.ui.graphics.Color, tintBlendMode: androidx.compose.ui.graphics.BlendMode, autoMirror: kotlin.Boolean, $mask0: kotlin.Int, $marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in androidx.compose.ui.graphics.vector.ImageVector.Builder' type=androidx.compose.ui.graphics.vector.ImageVector.Builder origin=DEFAULT_DISPATCH_CALL
            name: CONST String type=kotlin.String value="Scissors-2-line"
            defaultWidth: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: CONST Double type=kotlin.Double value=24.0
            defaultHeight: CALL 'public final fun <get-dp> (): androidx.compose.ui.unit.Dp [inline] declared in androidx.compose.ui.unit.DpKt' type=androidx.compose.ui.unit.Dp origin=GET_PROPERTY
              $receiver: CONST Double type=kotlin.Double value=24.0
            viewportWidth: CONST Float type=kotlin.Float value=24.0
            viewportHeight: CONST Float type=kotlin.Float value=24.0
            tintColor: COMPOSITE type=androidx.compose.ui.graphics.Color origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.Color origin=null
                <T>: kotlin.Long
                <R>: androidx.compose.ui.graphics.Color
                v: CONST Long type=kotlin.Long value=0
            tintBlendMode: COMPOSITE type=androidx.compose.ui.graphics.BlendMode origin=DEFAULT_VALUE
              CALL 'public final fun <unsafe-coerce> <T, R> (v: T of kotlin.jvm.internal.<unsafe-coerce>): R of kotlin.jvm.internal.<unsafe-coerce> declared in kotlin.jvm.internal' type=androidx.compose.ui.graphics.BlendMode origin=null
                <T>: kotlin.Int
                <R>: androidx.compose.ui.graphics.BlendMode
                v: CONST Int type=kotlin.Int value=0
            autoMirror: COMPOSITE type=kotlin.Boolean origin=DEFAULT_VALUE
              CONST Boolean type=kotlin.Boolean value=false
            $mask0: CONST Int type=kotlin.Int value=224
            $marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
          block: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.graphics.vector.ImageVector.Builder, kotlin.Unit> origin=LAMBDA
            COMPOSITE type=kotlin.Unit origin=null
            FUNCTION_REFERENCE 'private final fun _get_Scissors_2_line_$lambda$1 (): kotlin.Unit declared in com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.design.Scissors_2_lineKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.graphics.vector.ImageVector.Builder, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
    RETURN type=kotlin.Nothing from='public final fun <get-Scissors-2-line> (): androidx.compose.ui.graphics.vector.ImageVector declared in com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.design.Scissors_2_lineKt'
      CALL 'public final fun CHECK_NOT_NULL <T0> (arg0: T0 of kotlin.internal.ir.CHECK_NOT_NULL?): {T0 of kotlin.internal.ir.CHECK_NOT_NULL & Any} declared in kotlin.internal.ir' type=androidx.compose.ui.graphics.vector.ImageVector origin=EXCLEXCL
        <T0>: androidx.compose.ui.graphics.vector.ImageVector
        arg0: GET_FIELD 'FIELD PROPERTY_BACKING_FIELD name:_scissors-2-line type:androidx.compose.ui.graphics.vector.ImageVector? visibility:private [static]' type=androidx.compose.ui.graphics.vector.ImageVector? origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate$default(FunctionCodegen.kt:42)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethodNode(ClassCodegen.kt:385)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generateMethod(ClassCodegen.kt:402)
	at org.jetbrains.kotlin.backend.jvm.codegen.ClassCodegen.generate(ClassCodegen.kt:169)
	at org.jetbrains.kotlin.backend.jvm.FileCodegen.lower(JvmPhases.kt:41)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt.makeIrFilePhase$lambda$5(PhaseBuilders.kt:114)
	at org.jetbrains.kotlin.backend.common.phaser.PhaseBuildersKt$createSimpleNamedCompilerPhase$1.phaseBody(PhaseBuilders.kt:71)
	at org.jetbrains.kotlin.backend.common.phaser.SimpleNamedCompilerPhase.phaseBody(CompilerPhase.kt:226)
	at org.jetbrains.kotlin.backend.common.phaser.AbstractNamedCompilerPhase.invoke(CompilerPhase.kt:113)
	at org.jetbrains.kotlin.backend.common.phaser.PerformByIrFilePhase.invokeSequential(performByIrFile.kt:62)
	... 45 more
Caused by: java.lang.RuntimeException: Exception while generating code for:
FUN INLINE_LAMBDA name:_get_Scissors_2_line_$lambda$1 visibility:private modality:FINAL <> ($receiver:androidx.compose.ui.graphics.vector.ImageVector.Builder) returnType:kotlin.Unit
  $receiver: VALUE_PARAMETER name:$this$apply type:androidx.compose.ui.graphics.vector.ImageVector.Builder
  BLOCK_BODY
    VAR name:$i$a$-apply-Scissors_2_lineKt$Scissors-2-line$1 type:kotlin.Int [val]
      CONST Int type=kotlin.Int value=0
    COMPOSITE type=kotlin.Unit origin=null
      CALL 'public final fun path-R_LF-3I$default (name: kotlin.String?, fill: androidx.compose.ui.graphics.Brush?, fillAlpha: kotlin.Float, stroke: androidx.compose.ui.graphics.Brush?, strokeAlpha: kotlin.Float, strokeLineWidth: kotlin.Float, strokeLineCap: androidx.compose.ui.graphics.StrokeCap, strokeLineJoin: androidx.compose.ui.graphics.StrokeJoin, strokeLineMiter: kotlin.Float, pathFillType: androidx.compose.ui.graphics.PathFillType, pathBuilder: @[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.graphics.vector.PathBuilder, kotlin.Unit>, $mask0: kotlin.Int, $handler: kotlin.Any?): androidx.compose.ui.graphics.vector.ImageVector.Builder [inline] declared in androidx.compose.ui.graphics.vector.ImageVectorKt' type=androidx.compose.ui.graphics.vector.ImageVector.Builder origin=DEFAULT_DISPATCH_CALL
        $receiver: GET_VAR '$this$apply: androidx.compose.ui.graphics.vector.ImageVector.Builder declared in com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.design.Scissors_2_lineKt._get_Scissors_2_line_$lambda$1' type=androidx.compose.ui.graphics.vector.ImageVector.Builder origin=null
        name: COMPOSITE type=kotlin.String? origin=DEFAULT_VALUE
          CONST Null type=kotlin.String? value=null
        fill: CONSTRUCTOR_CALL 'public constructor <init> (value: androidx.compose.ui.graphics.Color, $constructor_marker: kotlin.jvm.internal.DefaultConstructorMarker?) declared in androidx.compose.ui.graphics.SolidColor' type=androidx.compose.ui.graphics.SolidColor origin=null
          value: CALL 'public final fun Color (color: kotlin.Long): androidx.compose.ui.graphics.Color declared in androidx.compose.ui.graphics.ColorKt' type=androidx.compose.ui.graphics.Color origin=null
            color: CONST Long type=kotlin.Long value=4278190080
          $constructor_marker: CONST Null type=kotlin.jvm.internal.DefaultConstructorMarker? value=null
        fillAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
          CONST Float type=kotlin.Float value=0.0
        stroke: CONST Null type=kotlin.Nothing? value=null
        strokeAlpha: COMPOSITE type=kotlin.Float origin=DEFAULT_VALUE
          CONST Float type=kotlin.Float value=0.0
        strokeLineWidth: CONST Float type=kotlin.Float value=0.0
        strokeLineCap: CALL 'public final fun getButt-KaPHkGw (): androidx.compose.ui.graphics.StrokeCap declared in androidx.compose.ui.graphics.StrokeCap.Companion' type=androidx.compose.ui.graphics.StrokeCap origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.StrokeCap.Companion visibility:public [final,static]' type=androidx.compose.ui.graphics.StrokeCap.Companion origin=null
        strokeLineJoin: CALL 'public final fun getMiter-LxFBmk8 (): androidx.compose.ui.graphics.StrokeJoin declared in androidx.compose.ui.graphics.StrokeJoin.Companion' type=androidx.compose.ui.graphics.StrokeJoin origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.StrokeJoin.Companion visibility:public [final,static]' type=androidx.compose.ui.graphics.StrokeJoin.Companion origin=null
        strokeLineMiter: CONST Float type=kotlin.Float value=4.0
        pathFillType: CALL 'public final fun getNonZero-Rg-k1Os (): androidx.compose.ui.graphics.PathFillType declared in androidx.compose.ui.graphics.PathFillType.Companion' type=androidx.compose.ui.graphics.PathFillType origin=GET_PROPERTY
          $this: GET_FIELD 'FIELD FIELD_FOR_OBJECT_INSTANCE name:Companion type:androidx.compose.ui.graphics.PathFillType.Companion visibility:public [final,static]' type=androidx.compose.ui.graphics.PathFillType.Companion origin=null
        pathBuilder: BLOCK type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.graphics.vector.PathBuilder, kotlin.Unit> origin=LAMBDA
          COMPOSITE type=kotlin.Unit origin=null
          FUNCTION_REFERENCE 'private final fun _get_Scissors_2_line_$lambda$1$lambda$0 (): kotlin.Unit declared in com.coleblvck.shelfSlim.contentManagement.remixIcons.remixicon.design.Scissors_2_lineKt' type=@[ExtensionFunctionType] kotlin.Function1<androidx.compose.ui.graphics.vector.PathBuilder, kotlin.Unit> origin=INLINE_LAMBDA reflectionTarget=null
        $mask0: CONST Int type=kotlin.Int value=21
        $handler: CONST Null type=kotlin.Any? value=null
      COMPOSITE type=kotlin.Unit origin=null

	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:50)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:99)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:610)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:638)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.gen(ExpressionCodegen.kt:216)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrCallGenerator.genValueAndPut(IrCallGenerator.kt:48)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:610)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:619)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:872)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitFieldAccess(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitSetField(IrElementVisitor.kt:206)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:902)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitSetField(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrSetField.accept(IrSetField.kt:21)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	... 55 more
Caused by: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at org.jetbrains.org.objectweb.asm.tree.LabelNode.getLabel(LabelNode.java:61)
	at org.jetbrains.org.objectweb.asm.tree.LabelNode.accept(LabelNode.java:68)
	at org.jetbrains.org.objectweb.asm.tree.InsnList.accept(InsnList.java:144)
	at org.jetbrains.org.objectweb.asm.tree.MethodNode.accept(MethodNode.java:751)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegenUtilsKt.cloneMethodNode(inlineCodegenUtils.kt:733)
	at org.jetbrains.kotlin.codegen.inline.SourceCompilerForInlineKt.loadCompiledInlineFunction(SourceCompilerForInline.kt:98)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.compileInlineFunction(IrSourceCompilerForInline.kt:91)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.compileInline(InlineCodegen.kt:43)
	at org.jetbrains.kotlin.codegen.inline.InlineCodegen.performInline(InlineCodegen.kt:51)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genInlineCall(IrInlineCodegen.kt:162)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCallGenerator.genCall(IrInlineCallGenerator.kt:36)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:647)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrCall.accept(IrCall.kt:24)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:587)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitContainerExpression(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.visitors.IrElementVisitor$DefaultImpls.visitComposite(IrElementVisitor.kt:125)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitComposite(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitComposite(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrComposite.accept(IrComposite.kt:18)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitStatementContainer(ExpressionCodegen.kt:573)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:578)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitBlockBody(ExpressionCodegen.kt:137)
	at org.jetbrains.kotlin.ir.expressions.IrBlockBody.accept(IrBlockBody.kt:20)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.generate(ExpressionCodegen.kt:239)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.doGenerate(FunctionCodegen.kt:121)
	at org.jetbrains.kotlin.backend.jvm.codegen.FunctionCodegen.generate(FunctionCodegen.kt:46)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrSourceCompilerForInline.generateLambdaBody(IrSourceCompilerForInline.kt:67)
	at org.jetbrains.kotlin.codegen.inline.ExpressionLambda.generateLambdaBody(LambdaInfo.kt:72)
	at org.jetbrains.kotlin.backend.jvm.codegen.IrInlineCodegen.genValueAndPut(IrInlineCodegen.kt:99)
	at org.jetbrains.kotlin.backend.jvm.codegen.ExpressionCodegen.visitCall$handleParameter(ExpressionCodegen.kt:610)


